const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = process.env.DATABASE_URL || path.join(__dirname, '../database.sqlite');

console.log('üîç Caminho do banco:', dbPath);

const db = new sqlite3.Database(dbPath);

async function corrigirCargoEryck() {
  try {
    console.log('üîê Corrigindo cargo do usu√°rio eryck...');
    
    // Atualizar cargo para 'gerente'
    db.run('UPDATE usuarios SET cargo = ? WHERE username = ?', ['gerente', 'eryck'], function(err) {
      if (err) {
        console.error('‚ùå Erro ao atualizar cargo:', err);
        db.close();
        return;
      }
      
      if (this.changes > 0) {
        console.log('‚úÖ Cargo atualizado com sucesso!');
        console.log('üë§ Usu√°rio eryck agora √© gerente');
        
        // Verificar se foi atualizado
        db.get('SELECT id, username, cargo FROM usuarios WHERE username = ?', ['eryck'], (err, usuario) => {
          if (err) {
            console.error('‚ùå Erro ao verificar usu√°rio:', err);
          } else {
            console.log('üìã Usu√°rio atualizado:', usuario);
          }
          db.close();
        });
      } else {
        console.log('‚ö†Ô∏è Nenhuma altera√ß√£o feita');
        db.close();
      }
    });
    
  } catch (error) {
    console.error('‚ùå Erro:', error);
    db.close();
  }
}

corrigirCargoEryck();
